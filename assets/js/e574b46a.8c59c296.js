"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[268],{6326:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var a=s(5893),r=s(1151);const t={},i=void 0,o={id:"veglayer/global/AVHRR-GIMMS",title:"AVHRR-GIMMS",description:"1981-2012 AVHRR NDVI3g Time Series",source:"@site/docs/veglayer/global/AVHRR-GIMMS.md",sourceDirName:"veglayer/global",slug:"/veglayer/global/AVHRR-GIMMS",permalink:"/cesdata/docs/veglayer/global/AVHRR-GIMMS",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"3D-forest-landscape",permalink:"/cesdata/docs/veglayer/global/3D-forest-landscape"},next:{title:"GEDI - Global Forest Canopy Height, 2019",permalink:"/cesdata/docs/veglayer/global/GEDI-forest-canopy-height"}},l={},d=[{value:"1981-2012 AVHRR NDVI3g Time Series",id:"1981-2012-avhrr-ndvi3g-time-series",level:2},{value:"references",id:"references",level:2},{value:"data availability",id:"data-availability",level:2},{value:"Data download and processing",id:"data-download-and-processing",level:2}];function c(n){const e={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{id:"1981-2012-avhrr-ndvi3g-time-series",children:"1981-2012 AVHRR NDVI3g Time Series"}),"\n",(0,a.jsx)(e.h2,{id:"references",children:"references"}),"\n",(0,a.jsxs)(e.p,{children:["Pinzon, JE & Tucker, CJ (2014). A Non-Stationary 1981-2012 AVHRR NDVI3g Time Series. Remote Sensing, 6(8), 6929-6960. Available online at ",(0,a.jsx)(e.a,{href:"http://www.mdpi.com/2072-4292/6/8/6929/htm",children:"http://www.mdpi.com/2072-4292/6/8/6929/htm"}),"."]}),"\n",(0,a.jsx)(e.p,{children:"Pinzon, JE & Tucker, CJ (2016). A Non-Stationary 1981-2015 AVHRR NDVI3g.v1 Time Series: an update. In preparation for submission to Remote Sensing."}),"\n",(0,a.jsx)(e.h2,{id:"data-availability",children:"data availability"}),"\n",(0,a.jsxs)(e.p,{children:["Originally available at  ",(0,a.jsx)(e.a,{href:"http://ecocast.arc.nasa.gov/data/pub/gimms/3g.v0/",children:"http://ecocast.arc.nasa.gov/data/pub/gimms/3g.v0/"})," , currently unreachable."]}),"\n",(0,a.jsxs)(e.p,{children:["More information in alternative locations: ",(0,a.jsx)(e.a,{href:"http://phenology.cr.usgs.gov/ndvi_avhrr.php",children:"http://phenology.cr.usgs.gov/ndvi_avhrr.php"})," , ",(0,a.jsx)(e.a,{href:"https://nex.nasa.gov/nex/projects/1349/",children:"https://nex.nasa.gov/nex/projects/1349/"})," (has moved to ",(0,a.jsx)(e.a,{href:"https://www.nasa.gov/nex",children:"https://www.nasa.gov/nex"}),")"]}),"\n",(0,a.jsxs)(e.p,{children:["Some instructions and recommendations in ",(0,a.jsx)(e.a,{href:"http://gis.stackexchange.com/questions/104500/how-to-create-several-header-files-to-open-avhrr-ndvi3g-gimms-files",children:"http://gis.stackexchange.com/questions/104500/how-to-create-several-header-files-to-open-avhrr-ndvi3g-gimms-files"})," and source code of package gimms for R: ",(0,a.jsx)(e.a,{href:"https://github.com/environmentalinformatics-marburg/gimms",children:"https://github.com/environmentalinformatics-marburg/gimms"})]}),"\n",(0,a.jsx)(e.h2,{id:"data-download-and-processing",children:"Data download and processing"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sh",children:'mkdir -p $GISDATA/sensores/AVHRR/GIMMS\ncd $GISDATA/sensores/AVHRR/GIMMS\n\nexport SERVER=http://ecocast.arc.nasa.gov/data/pub/gimms/3g.v0\nwget $SERVER/00FILE-LIST.txt\nwget -i 00FILE-LIST.txt --continue\n\nmkdir -p $GISDATA/sensores/AVHRR/GIMMS/nasanex\ncd $GISDATA/sensores/AVHRR/GIMMS/nasanex\n\nexport SERVER=https://nasanex.s3.amazonaws.com\nwget $SERVER\n\nfor file in $(xpath -q -e "//Key/text()" index.html | grep AVHRR/GIMMS/3G)\ndo\n   wget --continue $SERVER/$file\ndone\n\necho "ENVI\ndescription = { R-language data }\nsamples = 2160\nlines = 4320\nbands = 1\ndata type = 2\nheader offset = 0\ninterleave = bsq\nbyte order = 1" > $GISDATA/sensores/AVHRR/GIMMS/nasanex/header\n'})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sh",children:'\ncd $WORKDIR\n\nls $GISDATA/sensores/AVHRR/GIMMS/nasanex/geo*\necho \'ENVI\ndescription = { R-language data }\nsamples = 2160\nlines = 4320\nbands = 1\ndata type = 2\nheader offset = 0\ninterleave = bsq\ncoordinate system string =\nGEOGCS["GCS_WGS_1984",\nDATUM["D_WGS_1984",\nSPHEROID["WGS_1984",6378137.0,298.257223563]],\nPRIMEM["Greenwich",0.0],\nUNIT["Degree",0.0174532925199433]]\ngeo points = {\n1.0000, 1.0000, -180, 90,\n1.0000, 4321.0000, -180, -90,\n2161.0000, 1.0000, 180, 90,\n2161.0000, 4321.0000, 180, -90}\nbyte order = 1\' > $GISDATA/sensores/AVHRR/GIMMS/nasanex/geo88aug15b.n09-VI3g.hdr\n\ngdalwarp -s_srs EPSG:4326 -te -74 0 -58 13 -co "COMPRESS=DEFLATE" -to "SRC_METHOD=NO_GEOTRANSFORM" /opt/gisdata/sensores/AVHRR/GIMMS/nasanex/geo88aug15b.n09-VI3g NDVI-88aug15b.tif\n\n\n'})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-r",children:'#!R --vanilla\nrequire(gimms)\n\ne1 <- extent(c(-74,-58,0,13))\n\nfor (map in dir("/opt/gisdata/sensores/AVHRR/GIMMS/nasanex","VI3g",full.names=T)) {\n   r1 <- rasterizeGimms(map,e1)\n   nms <- gsub(".n14-VI3g","",strsplit(map,"/")[[1]][8])\n   if (!exists("dts")) {\n      dts <- data.frame(values(r1))\n      colnames(dts) <- nms\n   } else {\n      names(r1) <- nms\n      dts[,nms ] <- values(r1)\n   }\n}\n\nwks <- substr(colnames(dts),6,11)\nrsm <- matrix(nrow=nrow(dts),ncol=24)\ncolnames(rsm) <- unique(wks)\nfor (w in unique(wks)) {\n   rsm[,w] <- apply(dts[,wks %in% w],1,median)\n}\n oo <- colnames(rsm)[order(match(substr(colnames(rsm),1,3),tolower(month.abb)))]\n ss <- apply(is.na(rsm),1,sum)==0\nboxplot(rsm[ss,oo])\n\nrequire(cluster)\nrslt <- data.frame()\nfor (kk in 2:20) {\n\tmi.fn <- clara(rsm[ss,oo],k=kk,metric="euclidean",sampsize=500)\n\trslt <- rbind(rslt,data.frame(k=kk,swd=mi.fn$silinfo$avg.width))\n\n\t}\nrslt\n\nmi.fn <- clara(rsm[ss,oo],k=11,metric="euclidean",sampsize=1000)\nr0 <- r1*NA\nvalues(r0)[ss] <-  mi.fn$clustering\npar(mar=c(0,0,0,0))\nplot(r0,col=brewer.pal("Paired",n=12))\n\nplot(r0==6)\n'})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-r",children:'cat(file="~/sensores/AVHRR/GIMMS/header","ENVI\ndescription = { R-language data }\nsamples = 2160\nlines = 4320\nbands = 1\ndata type = 2\nheader offset = 0\ninterleave = bsq\nbyte order = 1")\n\n##R --vanilla\nlibrary(caTools)\nrequire(raster)\ne <- c(-74,-58,0,13)\nmptc <- "/media/jferrer/Elements/gisdata"\nout.dir <- "/home/jferrer/mapas/Venezuela"\nflst <- dir(sprintf("%s/sensores/AVHRR/GIMMS/",mptc),"geo")\nsystem(sprintf("mkdir -p %s/NDVI3g/",out.dir))\nsystem(sprintf("mkdir -p %s/NDVIfW/",out.dir))\n\nfor (ff in flst) {\n    yr <- as.numeric(substr(ff,4,5))\n    nn <- sprintf("A%s%02d%s",\n                  ifelse(yr<15,yr+2000,yr+1900),\n                  match(substr(ff,6,8),c("jan", "feb", "mar", "apr", "may",\n                                         "jun", "jul", "aug", "sep", "oct",\n                                         "nov", "dec")),\n                  ifelse(substr(ff,9,11)=="15a","01","15"))\n    fl1 <- sprintf("%s/NDVI3g/AVHRRVI3g.%s.Venezuela_NDVI.tif",out.dir,nn)\n    if (!file.exists(fl1)) {\n\n        prb <- try(read.ENVI(sprintf("%s/sensores/AVHRR/GIMMS/%s",mptc,ff),\n                             sprintf("%s/sensores/AVHRR/GIMMS/header",mptc)))\n        if (all(class(prb)!="try-error")) {\n            eprb <- raster(t(prb),xmn=-180, xmx=180, ymn=-90, ymx=90,\n                           crs="+proj=longlat +datum=WGS84")\n            ndvi3g <- crop(eprb,e)\n            flagW = ndvi3g-floor(ndvi3g/10)*10 + 1;\n            ndvi = floor(ndvi3g/10)/1000\n            values(ndvi)[values(ndvi)<0] <- NA\n\n            writeRaster(ndvi,filename=fl1)\n            writeRaster(flagW,filename=sprintf("%s/NDVIfW/AVHRRVI3g.%s.Venezuela_flagW.tif",out.dir,nn))\n        }\n    }\n}\n\nndvis <- stack(dir("~/mapas/Venezuela/NDVI3g/",full.names=T))\n\ntt <- as.numeric(substr(names(ndvis),12,15)) + (cumsum(c(0,31,28,31,30,31,30,31,31,30,31,30,31))[as.numeric(substr(names(ndvis),16,17))] + as.numeric(substr(names(ndvis),18,19)))/365\n\nqry <- t(extract(ndvis,data.frame(-68.95206,10.79257)))\n\n##ndvi80 <- stack(dir("~/mapas/Venezuela/NDVI3g/","198",full.names=T))\n##plot(ndvi80)\n##qry <- t(extract(ndvi80,data.frame(-68.95206,10.79257)))\n\nplot(tt,qry,type="l",\n     xlab="A\xf1o",ylab="Indice de vegetaci\xf3n de diferencias normalizadas")\n\nqry <- t(extract(ndvis,data.frame(-60.81398,5.851432)))\n\ntt <- ts(qry,start=c(1981,13),frequency=24)\nplot(tt,ylim=c(0,1))\ndlt <- decompose(tt)\n\nplot(tt,ylim=c(0,1),col="grey47",lty=3)\nlines(dlt$trend+dlt$seasonal,lwd=1,col=4)\nlines(dlt$trend,lwd=2,col=2)\n\n\nqr2 <- t(extract(ndvis,data.frame(-60.91389,5.28917)))\n\nt2 <- ts(qr2,start=c(1981,13),frequency=24)\ndl2 <- decompose(t2)\n\nplot(t2,ylim=c(0,1),col="grey47",lty=3)\nlines(dl2$trend+dl2$seasonal,lwd=1,col=4)\nlines(dl2$trend,lwd=2,col=2)\n\n##cd ~/dev/\n##svn checkout svn://r-forge.r-project.org/svnroot/greenbrown/\n##cd ~/dev/greenbrown/pkg/\n##sudo R CMD INSTALL --html greenbrown --resave-data\n\nrequire(greenbrown)\ntrd <- TrendSTM(t2,h=48/length(t2))\nplot(trd)\ntrd <- TrendSTM(tt)\nplot(trd)\n\nSTMmap <- TrendRaster(ndvis, start=c(1981, 13), freq=24, method="STM", breaks=0)\nplot(STMmap,2,col=brgr.colors(9))\nSTMmap.cl <- TrendClassification(STMmap, min.length=(8*12))\nplot(STMmap.cl, col=brgr.colors(3), main="Method STM")\nplot(STMmap<0.05,3)\nplot(STMmap.cl*(raster(STMmap,3)<0.05), col=brgr.colors(3), main="Method STM")\n\n\n'})})]})}function m(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},1151:(n,e,s)=>{s.d(e,{Z:()=>o,a:()=>i});var a=s(7294);const r={},t=a.createContext(r);function i(n){const e=a.useContext(t);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),a.createElement(t.Provider,{value:e},n.children)}}}]);