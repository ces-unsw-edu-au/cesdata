"use strict";(self.webpackChunkdocusite=self.webpackChunkdocusite||[]).push([[9505],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(r),f=a,b=p["".concat(c,".").concat(f)]||p[f]||u[f]||o;return r?n.createElement(b,i(i({ref:t},d),{},{components:r})):n.createElement(b,i({ref:t},d))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7626:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={},i="Global Biodiversity Information Facility",l={unversionedId:"species-dist/global/GBIF",id:"species-dist/global/GBIF",title:"Global Biodiversity Information Facility",description:"About",source:"@site/docs/species-dist/global/GBIF.md",sourceDirName:"species-dist/global",slug:"/species-dist/global/GBIF",permalink:"/cesdata/docs/species-dist/global/GBIF",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Birds of the World",permalink:"/cesdata/docs/species-dist/global/BOTW"},next:{title:"RLTS",permalink:"/cesdata/docs/species-dist/global/RLTS-spatial-data"}},c={},s=[{value:"About",id:"about",level:2},{value:"Reference",id:"reference",level:3},{value:"Documentation",id:"documentation",level:3},{value:"Data download and preparation",id:"data-download-and-preparation",level:3}],d={toc:s},p="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"global-biodiversity-information-facility"},"Global Biodiversity Information Facility"),(0,a.kt)("h2",{id:"about"},"About"),(0,a.kt)("h3",{id:"reference"},"Reference"),(0,a.kt)("blockquote",null),(0,a.kt)("h3",{id:"documentation"},"Documentation"),(0,a.kt)("h3",{id:"data-download-and-preparation"},"Data download and preparation"),(0,a.kt)("p",null,"The containing folder for all gbif data is this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"source ~/proyectos/CES/cesdata/env/project-env.sh\nmkdir -p $GISDATA/species-dist/global/GBIF\n")),(0,a.kt)("p",null,"We download data for each project directly from data.gbif.org or using R packages like ",(0,a.kt)("inlineCode",{parentName:"p"},"spocc"),". We save each one in a folder (using this naming convention PROJECTNAME/DOWNLOADFORMAT/DATE) and use rsync to syncronise with repository."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"export srcdir=$GISDATA/species-dist/global/GBIF/\nexport dstdir=$zID@kdm.restech.unsw.edu.au:/srv/scratch/cesdata/gisdata/species-dist/global/GBIF\n\nrsync -gloptrunv $srcdir/* $dstdir\n")))}u.isMDXComponent=!0}}]);