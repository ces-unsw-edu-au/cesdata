"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6126],{2061:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>R,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var s=a(5893),t=a(1151);const o={title:"Global Forest Change",description:"High-Resolution Global Maps of 21st-Century Forest Cover Change",tags:["deforestation","Venezuela","wget","VRT","Gran Sabana"]},r=void 0,l={id:"forest/global/GFC",title:"Global Forest Change",description:"High-Resolution Global Maps of 21st-Century Forest Cover Change",source:"@site/docs/forest/global/GFC.md",sourceDirName:"forest/global",slug:"/forest/global/GFC",permalink:"/cesdata/docs/forest/global/GFC",draft:!1,unlisted:!1,tags:[{label:"deforestation",permalink:"/cesdata/docs/tags/deforestation"},{label:"Venezuela",permalink:"/cesdata/docs/tags/venezuela"},{label:"wget",permalink:"/cesdata/docs/tags/wget"},{label:"VRT",permalink:"/cesdata/docs/tags/vrt"},{label:"Gran Sabana",permalink:"/cesdata/docs/tags/gran-sabana"}],version:"current",frontMatter:{title:"Global Forest Change",description:"High-Resolution Global Maps of 21st-Century Forest Cover Change",tags:["deforestation","Venezuela","wget","VRT","Gran Sabana"]},sidebar:"tutorialSidebar",previous:{title:"Forest Landscape Integrity Index",permalink:"/cesdata/docs/forest/global/Forest-Landscape-Integrity-Index"},next:{title:"Global PALSAR-2/PALSAR/JERS-1 Mosaics and Forest/Non-Forest Maps",permalink:"/cesdata/docs/forest/global/PALSAR-forest-non-forest"}},i={},d=[{value:"Citation",id:"citation",level:2},{value:"Data access",id:"data-access",level:2},{value:"Data download",id:"data-download",level:2},{value:"Subsets",id:"subsets",level:2},{value:"This dataset is used for...",id:"this-dataset-is-used-for",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"High-Resolution Global Maps of 21st-Century Forest Cover Change"}),"\n",(0,s.jsx)(n.h2,{id:"citation",children:"Citation"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Hansen, M. C., P. V. Potapov, R. Moore, M. Hancher, S. A. Turubanova, A. Tyukavina, D. Thau, S. V. Stehman, S. J. Goetz, T. R. Loveland, A. Kommareddy, A. Egorov, L. Chini, C. O. Justice, and J. R. G. Townshend. 2013. ",(0,s.jsx)(n.em,{children:"High-Resolution Global Maps of 21st-Century Forest Cover Change."})," ",(0,s.jsx)(n.strong,{children:"Science"})," 342 (15 November): 850\u201353. ",(0,s.jsx)(n.a,{href:"http://earthenginepartners.appspot.com/science-2013-global-forest",children:"Data available on-line"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"data-access",children:"Data access"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"http://www.earthenginepartners.appspot.com/science-2013-global-forest/download.html",children:"http://www.earthenginepartners.appspot.com/science-2013-global-forest/download.html"})}),"\n",(0,s.jsx)(n.h2,{id:"data-download",children:"Data download"}),"\n",(0,s.jsx)(n.p,{children:"For all versions from  v1.0 (2013) to v1.7 we can use a simple bash script to download the whole set:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'source ~/proyectos/CES/cesdata/env/project-env.sh\nmkdir -p $GISDATA/forest/global/GFC/\n\n\nexport SRC="https://storage.googleapis.com/earthenginepartners-hansen"\n\nfor VRS in GFC-2019-v1.7 ## GFC-2018-v1.6 GFC-2017-v1.5 GFC-2016-v1.4 GFC-2015-v1.3 GFC2015 GFC2014 GFC2013\ndo\n    for VAR in gain lossyear treecover2000\n    do\n      mkdir -p $GISDATA/forest/global/GFC/$VRS/$VAR\n      cd $GISDATA/forest/global/GFC/$VRS/$VAR\n        wget $SRC/$VRS/$VAR.txt\n      wget -b --continue -i $VAR.txt\n    done\ndone\n'})}),"\n",(0,s.jsx)(n.p,{children:"Builds VRT (Virtual Dataset) as a mosaic of the list of input files"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"export VRS=GFC-2019-v1.7\nexport VAR=treecover2000\n\ncd $GISDATA/forest/global/GFC/\nfor VRS in GFC-2019-v1.7\ndo\n  for VAR in gain lossyear treecover2000\n  do\n    gdalbuildvrt index_${VRS}_${VAR}.vrt $GISDATA/forest/global/GFC/${VRS}/${VAR}/Hansen_${VRS}_${VAR}_*.tif\n  done\ndone\n"})}),"\n",(0,s.jsx)(n.h2,{id:"subsets",children:"Subsets"}),"\n",(0,s.jsxs)(n.p,{children:["Example for Gran Sabana in Venezuela (bbox/: -63.1 4.6 -60.5 6.6) within ",(0,s.jsx)(n.code,{children:"10N_070W"})," tile, and for Suriname, last version of data:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'export VRS=GFC-2019-v1.7\ncd $WORKDIR\nmkdir -p $WORKDIR/$VRS\nfor VAR in gain lossyear treecover2000 # datamask first last\ndo\n  ## use -co "COMPRESS=LZW" for highest compression lossless ration\n  gdalwarp -te -63.1 4.6 -60.5 6.6 -co "COMPRESS=LZW" $GISDATA/sensores/Landsat/index_${VRS}_${VAR}.vrt $WORKDIR/$VRS/${VRS}.GS.${VAR}.tif\n  gdalwarp -te -59 1 -53 7 -co "COMPRESS=LZW" $GISDATA/sensores/Landsat/$VRS/Hansen_${VRS}_${VAR}_10N_060W.tif $WORKDIR/$VRS/${VRS}.Suriname.${VAR}.tif\ndone\n\n'})}),"\n",(0,s.jsx)(n.p,{children:"For large areas spanning several tiles we can merge the files, keeping the original resolution. Examples for Venezuela, North and Central America (NAC) and South America (SAM):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'export VRS=GFC-2019-v1.7\nexport VAR=treecover2000\n\ncd $WORKDIR\nmkdir -p $WORKDIR/$VRS\n\ncd $GISDATA/sensores/Landsat/\ngdalbuildvrt index_$(VRS)_${VAR}.vrt $GISDATA/sensores/Landsat/$VRS/Hansen_${VRS}_${VAR}_*.tif\n## RROR 3: Free disk space available is 570111430656 bytes, whereas 806400000000 are at least necessary. You can disable this check by defining the CHECK_DISK_FREE_SPACE configuration option to FALSE.\n## Creation failed, terminating gdal_merge.\n# nohup gdal_merge.py -co "BIGTIFF=YES"  -o $WORKDIR/$VRS/${VRS}.world.${VAR}.tif $GISDATA/sensores/Landsat/$VRS/Hansen_${VRS}_${VAR}_*.tif &\n\n\ngdal_merge.py -ul_lr -74 13 -59 0 -co "COMPRESS=LZW"-o ${VRS}.Venezuela.${VAR}.tif $GISDATA/sensores/Landsat/$VRS/Hansen_${VRS}_${VAR}_*N*W.tif\ngdal_merge.py -ul_lr -62.70 -19.25 -54.20 -27.65 -co "COMPRESS=LZW" -o ${VRS}.Paraguay.${VAR}.tif $GISDATA/sensores/Landsat/$VRS/Hansen_${VRS}_${VAR}_*S*W.tif\n\ngdal_merge.py -ul_lr -138 60 -40 3 -co "COMPRESS=LZW" -o ${VRS}.NAC.${VAR}.tif $GISDATA/sensores/Landsat/$VRS/Hansen_${VRS}_${VAR}_*N*W.tif\n\ngdal_merge.py -ul_lr -90 15 -25 -60 -co "COMPRESS=LZW" -o ${VRS}.SAM.${VAR}.tif $GISDATA/sensores/Landsat/$VRS/Hansen_${VRS}_${VAR}_*W.tif\n'})}),"\n",(0,s.jsx)(n.p,{children:"Or we can change the resolution"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'gdalwarp -te -90 -60 -25 15 -tr 0.001475 0.001475 -srcnodata "0" -dstnodata "0" -tap -r average $GISDATA/sensores/Landsat/$VRS/Hansen_${VRS}_${VAR}_*W.tif ${VRS}.SAM.${VAR}_500m.tif\n\ngdalwarp -te -138 3 -40 60 -tr 0.001475 0.001475 -srcnodata "0" -dstnodata "0" -tap -r average $GISDATA/sensores/Landsat/$VRS/Hansen_${VRS}_${VAR}_*W.tif ${VRS}.NAC.${VAR}_500m.tif\n\nexport GISDATA=/opt/gisdb/extra-gisdata/\nexport VRS=GFC-2019-v1.7\nexport VAR=treecover2000\n\n\ngdalwarp -tr 0.001475 0.001475 -srcnodata "0" -dstnodata "0" -tap -r average $GISDATA/sensores/Landsat/index_${VRS}_${VAR}.vrt  ${VRS}.world.${VAR}_500m.tif\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"this-dataset-is-used-for",children:"This dataset is used for..."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Deforestation analysis in Venezuela ",(0,s.jsx)(n.a,{href:"https://github.com/NeoMapas/datos-deforestacion-venezuela",children:"GitHub repo"})]}),"\n"]})]})}function R(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>l,a:()=>r});var s=a(7294);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);