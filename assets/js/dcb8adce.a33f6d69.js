"use strict";(self.webpackChunkdocusite=self.webpackChunkdocusite||[]).push([[4368],{3905:(e,o,n)=>{n.d(o,{Zo:()=>g,kt:()=>d});var r=n(7294);function t(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function a(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?a(Object(n),!0).forEach((function(o){t(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function s(e,o){if(null==e)return{};var n,r,t=function(e,o){if(null==e)return{};var n,r,t={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],o.indexOf(n)>=0||(t[n]=e[n]);return t}(e,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var c=r.createContext({}),l=function(e){var o=r.useContext(c),n=o;return e&&(n="function"==typeof e?e(o):i(i({},o),e)),n},g=function(e){var o=l(e.components);return r.createElement(c.Provider,{value:o},e.children)},p="mdxType",E={inlineCode:"code",wrapper:function(e){var o=e.children;return r.createElement(r.Fragment,{},o)}},u=r.forwardRef((function(e,o){var n=e.components,t=e.mdxType,a=e.originalType,c=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),p=l(n),u=t,d=p["".concat(c,".").concat(u)]||p[u]||E[u]||a;return n?r.createElement(d,i(i({ref:o},g),{},{components:n})):r.createElement(d,i({ref:o},g))}));function d(e,o){var n=arguments,t=o&&o.mdxType;if("string"==typeof e||t){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var c in o)hasOwnProperty.call(o,c)&&(s[c]=o[c]);s.originalType=e,s[p]="string"==typeof e?e:t,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8001:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>E,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),t=(n(7294),n(3905));const a={},i="Biogeography and ecoregions",s={unversionedId:"ecoregions/global/RESOLVE-ecoregions",id:"ecoregions/global/RESOLVE-ecoregions",title:"Biogeography and ecoregions",description:"RESOLVE ecoregions",source:"@site/docs/ecoregions/global/RESOLVE-ecoregions.md",sourceDirName:"ecoregions/global",slug:"/ecoregions/global/RESOLVE-ecoregions",permalink:"/cesdata/docs/ecoregions/global/RESOLVE-ecoregions",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Bioregions 2020",permalink:"/cesdata/docs/ecoregions/global/OneEarth-bioregions"},next:{title:"TNC terrestrial ecoregions",permalink:"/cesdata/docs/ecoregions/global/TNC-ecoregions"}},c={},l=[{value:"RESOLVE ecoregions",id:"resolve-ecoregions",level:2}],g={toc:l},p="wrapper";function E(e){let{components:o,...n}=e;return(0,t.kt)(p,(0,r.Z)({},g,n,{components:o,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"biogeography-and-ecoregions"},"Biogeography and ecoregions"),(0,t.kt)("h2",{id:"resolve-ecoregions"},(0,t.kt)("a",{parentName:"h2",href:"https://ecoregions2017.appspot.com"},"RESOLVE ecoregions")),(0,t.kt)("p",null,(0,t.kt)("em",{parentName:"p"},"Citation"),": Dinerstein E, Olson D, Joshi A, Vynne C, Burgess ND, Wikramanayake E, Hahn N, Palminteri S, Hedao P, Noss R, Hansen M, Locke H, Ellis EE, Jones B, Barber CV, Hayes R, Kormos C, Martin V, Crist E, Sechrest W, Price L, Baillie JEM, Weeden D, Suckling K, Davis C, Sizer N, Moore R, Thau D, Birch T, Potapov P, Turubanova S, Tyukavina A, de Souza N, Pintea L, Brito JC, Llewellyn Barnekow Lilles\xf8 JP, van Breugel P, Graudal L, Voge M, Al-Shammari KF, Saleem M (2017) An Ecoregion-Based Approach to Protecting Half the Terrestrial Realm, BioScience 67: 534\u2013545. ",(0,t.kt)("a",{parentName:"p",href:"https://doi.org/10.1093/biosci/bix014"},"DOI: 10.1093/biosci/bix014")),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://developers.google.com/earth-engine/datasets/catalog/RESOLVE_ECOREGIONS_2017"},"Documentation")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sh"},"source ~/proyectos/CES/cesdata/env/project-env.sh\n\nmkdir -p $GISDATA/ecoregions/global/TEOW/\ncd $GISDATA/ecoregions/global/TEOW/\n\nwget -b --continue https://storage.googleapis.com/teow2016/Ecoregions2017.zip\n\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sh"},'qsub -I -l select=1:ncpus=12:mem=120gb,walltime=24:00:00\n\nsource ~/proyectos/CES/cesdata/env/project-env.sh\n\nmodule add sqlite/3.31.1 spatialite/5.0.0b0 python/3.8.3 perl/5.28.0 gdal/3.2.1 geos/3.8.1\n\nexport WD=$GISDATA/ecoregions/global/TEOW/\nexport OUTPUT=$WD/teow2017-valid-output\ncd  $WD\nunzip -u $WD/Ecoregions2017.zip\n\nogr2ogr -f "CSV" $OUTPUT Ecoregions2017.shp -sql "SELECT ECO_BIOME_,ECO_ID,ECO_NAME FROM Ecoregions2017"\n\ncd $OUTPUT\n\nfor BIOME in $(cut ${OUTPUT}/Ecoregions2017.csv -d, -f1 | tail -n+2 | sort | uniq)\ndo\n   mkdir -p $OUTPUT/$BIOME\n   cd $OUTPUT/$BIOME\n   grep $BIOME $OUTPUT/Ecoregions2017.csv > list\n   for ECOID in $(cut list -d, -f2 | sed -s s/\'"\'//g)\n   do\n      if [ $(ogrinfo --version | grep "GDAL 3.2" -c) -eq 1 ]\n      then\n         ogr2ogr -f "GPKG" teow_${ECOID}_valid.gpkg $WD/Ecoregions2017.shp Ecoregions2017 -where "ECO_ID=\'${ECOID}\'" -nlt PROMOTE_TO_MULTI -t_srs "+proj=longlat +datum=WGS84" -makevalid\n      else\n         ogr2ogr -f "GPKG" teow_${ECOID}.gpkg $WD/Ecoregions2017.shp Ecoregions2017 -where "ECO_ID=\'${ECOID}\'" -nlt PROMOTE_TO_MULTI -t_srs "+proj=longlat +datum=WGS84"\n      fi\n    echo $BIOME $ECOID done! $(date)\n   done\ndone\n\nif [ $(ogrinfo --version | grep "GDAL 3.2" -c) -eq 1 ]\nthen\n  ogr2ogr -f "GPKG" teow_2017_valid.gpkg $WD/Ecoregions2017.shp Ecoregions2017  -nlt PROMOTE_TO_MULTI -t_srs "+proj=longlat +datum=WGS84" -makevalid\nelse\n   echo " update GDAL version"\nfi\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sql"},'\ncd $WORKDIR\nunzip $GISDATA/biogeografia/RESOLVE_Ecoregions/Ecoregions2017.zip\n\npsql gisdata -c "CREATE SCHEMA resolve"\nogr2ogr -f "PostgreSQL" PG:"host=localhost user=jferrer dbname=gisdata"  Ecoregions2017.shp -lco SCHEMA=resolve -nlt PROMOTE_TO_MULTI\n')),(0,t.kt)("p",null,"Now in ",(0,t.kt)("inlineCode",{parentName:"p"},"psql gisdata"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sql"},"\nCREATE UNIQUE INDEX CONCURRENTLY ecoregions2017_idx\nON resolve.Ecoregions2017 (eco_name, eco_biome_, eco_id);\n\nCREATE TABLE IF NOT EXISTS resolve.typology_xwalk (\n  eco_name character varying(150),\n  eco_biome_ character varying(254),\n  eco_id numeric(11,0),\n  efg_code varchar(10),\n  version varchar(10),\n  map_code varchar(20),\n  map_version varchar(10),\n  occurrence smallint,\n  contributors text[],\n  FOREIGN KEY (eco_name, eco_biome_, eco_id) REFERENCES resolve.Ecoregions2017 (eco_name, eco_biome_, eco_id),\n  PRIMARY KEY (map_code, map_version, eco_id)\n);\n\n\n\n")),(0,t.kt)("p",null,"Use script xwalk-resolve-ecoregions.R to populate the table."),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"select * from resolve.typology_xwalk where efg_code='TF1.4';")))}E.isMDXComponent=!0}}]);